import java.util.List;

public class Sphere implements ThreeDShape,Positionable{
    private ThreeDPoint center;
    private double radius;

    public Sphere(double centerx, double centery, double centerz, double radius) {
        this.center = new ThreeDPoint(centerx, centery,centerz);
        this.radius = radius;
    }

    @Override
    public Point center() {
        return center;
    }

    public void setRadius(double r) { this.radius = r; }

    public double getRadius() { return radius; }

    @Override
    public double volume() {
        double volume = (4.0)*(Math.PI)*Math.pow(getRadius(),2);
        return volume;
    }

    @Override
    public double surfacearea(){
        double surfacearea = (4.0/3.0)*Math.PI*Math.pow(getRadius(), 3);
        return surfacearea;
    }

    public Sphere random(){
        double centerx1 = (int) (Math.random()*10)+1;
        double centery1 = (int) (Math.random()*10)+1;
        double centerz1 = (int) (Math.random()*10)+1;
        double radius1 = (int) (Math.random()*10)+1;
        Sphere sphere1 = new Sphere(centerx1, centery1, centerz1, radius1);
        return sphere1;
    }
    @Override
    public void setPosition(List<? extends Point> points) {
    }

    @Override
    public List<? extends Point> getPosition() {
        return null;
    }

    @Override
    public int compareTo(ThreeDShape o) {
        int value = 0;
        if (this.volume() < o.volume()) {
            value +=  -1;
        }
        else if(this.volume() == o.volume()) {
            value +=  0;
        }
        else if(this.volume() > o.volume()){
            value += 1;
        }
        return value;
    }
}
